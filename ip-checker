#!/bin/bash

# Site from script fetches your public IP
getipaddr="ifconfig.me"


# This way does not work as I expected, cause pwd fetches the curren path FROM you are running
# the scritp, and eventually could not be run from its own directory
#CWD=$(pwd)
#nowipaddr="$CWD/nowipaddr"
#log="$CWD/logIP.log"


# Customize here your own paths
nowipaddr="$HOME/ip-checker/nowipaddr"
log="$HOME/ip-checker/logIP.log"
#mail_content="/home/wyre/ip-checker/mail.txt"

writing_mail() {
    printf '%s\n%s\n%s\n' "To: WyRe12@gmail.com" "From: lentium.xyz@gmail.com" "Subject: YemaServer Ip has changed";
    printf '\n%s -> %s\n' "YemaSrv IP has changed to" "$(cat "$1")";
}

if [ -e "$nowipaddr" ] && [ -e "$log" ];
then

    # Main block, here is checking if IP has changed
    # then sends you an email

    if [ "$(cat "$nowipaddr")" != "$(curl -s $getipaddr)" ]
    then
        curl -s "$getipaddr" > "$nowipaddr"
        # Switch here your personal mail to receive sent mail
        #echo "IP has changed to -> $(cat $nowipaddr)" | mail -s "YemaServer Ip has changed" WyRe12@gmail.com
        #if [[ $nowipaddr != *[!.0-9.]* ]]
        #then
            writing_mail "$nowipaddr" | msmtp -a default WyRe12@gmail.com
        #fi
        {
            date;
            echo "IP has changed to -> $(cat "$nowipaddr"); sending email to WyRe12@gmail.com";
            echo " ";
        } >> "$log"
    fi

    # Debugging part to send mails or log info even
    # when there are no changes

  #  if [ "$(cat $nowipaddr)" = "$(curl -s $getipaddr)" ]
  #  then
  #      echo "Current IP is -> $(cat $nowipaddr)" | mail -s "Testing YemaServ mail Service" WyRe12@gmail.com
  #      {
  #          date;
  #          echo "No IP change. Right now is $(cat $nowipaddr)";
  #          echo " ";
  #      } >> $log
  #  fi

# If nowipaddr or logIP.log does not exist it will creates needed file
# and it takes this as firs time execution.

else

    if [ -e "$log" ]
    then
        rm "$log"
    fi
    if [ -e "$nowipaddr" ]
    then
        rm "$nowipaddr"
    fi
    #if [ -e "$mail_content" ]
    #then
    #    rm "$mail_content"
    #fi

    touch "$log"
    {
        echo " ";
        echo "##################################";
        echo "Creating Log for script debugging:";
        echo "##################################";
        echo " ";
    } >> "$log"

    touch "$nowipaddr"
    curl -s "$getipaddr" > "$nowipaddr"

    #touch $mail_content
    #writing_mail() > $mail_content

    #if [[ $nowipaddr != *[!.0-9.]* ]]
    #then
        writing_mail "$nowipaddr" | msmtp -a default WyRe12@gmail.com
    #fi

    #echo "Fetching IP for the first time, IP -> $(cat $nowipaddr)" | mail -s "First time execution IP script" WyRe12@gmail.com
    {
        date;
        echo "Fetching IP for the first time, IP -> $(cat "$nowipaddr"); sending email to WyRe12@gmail.com";
        echo " ";
    } >> "$log"
fi
